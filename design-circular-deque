class MyCircularDeque:

    def __init__(self, k: int):
        self.q=[]
        self.k=k

    def insertFront(self, value: int) -> bool:
        if len(self.q)==self.k:
            return False
        else:
            self.q.insert(0,value)
            return True       

    def insertLast(self, value: int) -> bool:
        if len(self.q)==self.k:
            return False
        else:
            self.q.append(value)
            return True
        

    def deleteFront(self) -> bool:
        if self.q:
            self.q.pop(0)
            return True
        else:
            return False

    def deleteLast(self) -> bool:
        if self.q:
            self.q.pop()
            return True
        else:
            return False

    def getFront(self) -> int:
        if self.q:
            return self.q[0]   
        else: return -1  

    def getRear(self) -> int:
        if self.q:
            return self.q[-1]
        else: return -1

    def isEmpty(self) -> bool:
        if self.q:
            return False
        else: return True
        

    def isFull(self) -> bool:
        if len(self.q)==self.k:
            return True
        else: return False
        
