class Solution:
    def longestSubarray(self, nums: List[int], limit: int) -> int:
        maxs=deque()
        mins=deque()
        s,e=0,0
        cout=0
        while s<len(nums):
            while mins and nums[mins[-1]]>nums[s]:
                mins.pop()
            mins.append(s)

            while maxs and nums[maxs[-1]]<nums[s]:
                maxs.pop()
            maxs.append(s)

            while nums[maxs[0]]-nums[mins[0]]>limit:
                e+=1
                if mins[0]<e:
                    mins.popleft()
                if maxs[0]<e:
                    maxs.popleft()
            cout=max(cout,s-e+1)
            s+=1
        return cout
